@startuml mutual funds recurring

participant "ms-gql" as mg
participant "ms-investment-transaction" as mit
collections "recurringSubscriptions" as recSubs
participant "ms-recurring" as mr
collections "recurrings" as recs

activate mg
mg -> mit: POST /instructions
note left
{ 
    frequency: ONCE/DAILY/DAILY_WEEKDAYS/WEEKLY/MONTHLY
    endCondition: DATE/OCCURENCE/NONE
    startDate: Date
    endDate: Date///unset//
    targetOccurrence: Number///unset//
    productCode: String
    goalCode: String
    amount: Number
    fee: Number
    tax: Number
}
end note
activate mit
mit -> mr: POST /instructions
activate mr
mr -> mr: calculate nextDate
mr -> recs: insert recurring
note right
{ 
    cif: String
    recurringId: String
    frequency: ONCE/DAILY/DAILY_WEEKDAYS/WEEKLY/MONTHLY
    endCondition: DATE/OCCURENCE/NONE
    startDate: Date
    endDate: Date///unset//
    targetOccurrence: Number///unset//
    status: ACTIVE/PAUSED
    occurrence: Number///unset//
    nextDate: Date
    processingCode: MUTUAL_FUNDS_SUB
}
end note
mr --> mit: return inserted data
deactivate mr
mit-> recSubs: insert recurring subscription
note right
{ 
    cif: String
    recurringId: String
    productCode: String
    goalCode: String
    amount: Number
    fee: Number
    tax: Number
    lastDate: Date///unset//
    lastStatus: FAILED/SUCCESS///unset//
}
end note
mit --> mg: return detailed recurring data
deactivate mit
deactivate mg

@enduml