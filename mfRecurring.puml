@startuml mutual funds recurring

participant "jenius2-apps" as app
participant "ms-gql" as mg
participant "ms-investment-transaction" as mit
collections "forecasts" as forecasts
collections "productInstructions" as recSubs
participant "ms-recurring" as mr
collections "instructions" as recs

activate app
app -> mg: forecastInvestmentTransaction
note left
{
    productCode: String
    currency: String
    type: SUB
    amount: Number
    goalCode: String
}
end note
activate mg
mg -> mit: POST /forecast
activate mit
mit -> forecasts: insert forecast with 10mins expiry
mit --> mg: return forecastChecksum
mg --> app: return forecastChecksum
deactivate mit
deactivate mg
app -> mg: createMutualFundsInstruction
note left
{ 
    frequency: ONCE/DAILY/DAILY_WEEKDAYS/WEEKLY/MONTHLY
    endCondition: DATE/OCCURENCE/NONE
    startDate: Date
    endDate?: Date
    targetOccurrence?: Number
    forecastChecksum: String
}
end note
activate mg
mg -> mit: POST /instructions
activate mit
mit -> mit: verify stepup
mit -> forecasts: query forecast with checksum
mit -> mr: POST /instructions
note left
{ 
    frequency: ONCE/DAILY/DAILY_WEEKDAYS/WEEKLY/MONTHLY
    endCondition: DATE/OCCURENCE/NONE
    startDate: Date
    endDate?: Date
    targetOccurrence?: Number
    amount: Number
    imageUri: String
    name: String
    beneficiaryName: String
    amount: Number
    category: String
    processingCode: MUTUAL_FUNDS_SUB
}
end note
activate mr
mr -> mr: executeDate = startDate
mr -> recs: insert instruction
note right
{ 
    cif: String
    recurringId: String
    frequency: ONCE/DAILY/DAILY_WEEKDAYS/WEEKLY/MONTHLY
    endCondition: DATE/OCCURENCE/NONE
    startDate: Date
    endDate?: Date
    targetOccurrence?: Number
    status: ACTIVE/PAUSED
    occurrence?: Number
    executeDate: Date
    processingCode: MUTUAL_FUNDS_SUB
    isProcessing: Boolean
    histories?: Array<{
        executedAt: Date
        status: SUCCESS/FAILED/INSUFFICIENT_BALANCE
    }>
    imageUri: String
    name: String
    beneficiaryName: String
    amount: Number
    category: String
    createdAt: Date
    modifiedAt: Date
}
end note
mr --> mit: return inserted data
deactivate mr
mit-> recSubs: insert product instruction\nfrom forecast data
note right
{ 
    source: String
    cif: String
    recurringId: String
    productCode: String
    productName: String
    productGLAccount: String
    goalCode: String
    currency: String
    amount: Number
    fee: Number
    tax: Number
    createdAt: Date
    modifiedAt: Date
}
end note
mit --> mg: return detailed instruction
deactivate mit
mg --> app: return detailed instruction
deactivate mg
deactivate app

@enduml