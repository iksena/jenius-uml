@startuml mutual funds cron recurring

participant "cron-recurring" as cron
participant "ms-recurring" as mr
collections "instructions" as instructions
queue "Kafka Recurring" as kafkaRec
participant "worker-recurring" as wiRec
collections "recurringConfig" as configs
participant "ms-investment-transaction" as mit
participant "WMS" as wms
participant "Kafka Journal Request" as kafkaJournal
collections "productInstructions" as recSubs

activate cron
cron -> cron: run every day\n at 4am & 9am
cron -> mr: POST /admin/actions/execute
deactivate cron
activate mr
mr -> instructions: query\n nextDate=today\n status=ACTIVE
mr -> kafkaRec: publish
note right
{ 
    cif: String
    recurringId: String
    processingCode: MUTUAL_FUNDS_SUB
}
end note
mr -> mr: if ⏱ exceeds 60m then stop
deactivate mr
activate kafkaRec
kafkaRec -> wiRec: consume MF sub request
deactivate kafkaRec
activate wiRec
wiRec -> mr: GET /admin/instructions/status\n calculate executeDate
activate mr
mr --> wiRec: executeDate, nextStatus
deactivate mr
wiRec -> configs: query config to map processingCode
wiRec -> mit: POST /admin/recurring-transactions
activate mit
wiRec -> instructions: Update executeDate
deactivate wiRec
mit -> wms: forecast sub transaction
mit -> kafkaJournal: proceed transaction to journal posting
alt nextStatus=COMPLETED
mit -> recSubs: delete data
else
mit -> recSubs: update {lastDate, lastStatus}
end
deactivate mit

@enduml