@startuml risk profiles
participant "Apps" as app
participant "BTPN\nJenius Microservices" as ms
collections "DB Investment" as db
participant "Additiv\nDFS" as dfs

activate app
note over app: **Create risk profile**
app -> ms: GraphQL mutation\nriskProfileAssessment
activate ms
note right
riskProfileAssessment(input: [RiskProfileAssessmentInput]!)
input RiskProfileAssessmentInput {
  questionNumber: Int!
  answer: String!
}
end note
ms -> dfs: POST /risk-profiles
note left
ChannelID: 02
CIF: String
_Questionnaire: [
  {
    QuestionNo: Number
    Answer: String
    Type: "RISK"
  }
]
actionType: C/U
referenceNumber: String
end note
activate dfs
dfs -> dfs: calculate risk profile result
dfs --> ms: response risk profile result
note right
{
  ErrorCode: "0000",
  IsSuccess: true,
  Message: String,
  ResponseCode: null,
  SolutionCode: null,
  Result: {
    CIF: String,
    ClientDt: ISODate,
    IFUA: String,
    RefId: String,
    RiskProfileExpDt: Date,
    RiskProfileID: Number,
    RiskProfileName: String,
    SIDCorpBonds: null,
    SIDGovBonds: null,
    SIDMF: String
    SIDMFStatus: String
  }
}
**RiskProfileID: RiskProfileName**
1: Conservative
2: Moderate Conservative
3: Moderate
4: Moderate Aggressive
5: Aggressive
end note
deactivate dfs
ms -> db: Save to riskProfiles
note right
cif: String <- CIF
result: String <- RiskProfileName
category: Int <- RiskProfileID
validUntil: ISODate <- RiskProfileExpDt
answers: Array[<{questionNumber: Int, answer: String}>]
modifiedAt: ISODate
end note
ms --> app: return risk profile result
deactivate ms

note over app: **Get risk profile recommendation**
app -> ms: GraphQL query riskProfileDetail
note right
riskProfileDetail {
  validUntil
  category
  recommendation {
    percentage
    productCategory
    productCategoryName
  }
}
end note
activate ms
ms -> dfs: GET /risk-profile-recommendations
activate dfs
dfs --> ms: response risk profile recommendations
note right
[
  {
    productCategory: 1,
    productCategoryName: 'Money Market',
    percentage: 20
  },
  {
    productCategory: 2,
    productCategoryName: 'Fixed Income Short',
    percentage: 30
  },
  {
    productCategory: 3,
    productCategoryName: 'Fixed Income Long',
    percentage: 20
  },
  {
    productCategory: 4,
    productCategoryName: 'Equity',
    percentage: 30
  }
]
end note
deactivate dfs
ms <-- db: Query from riskProfiles
ms -> ms: map category (RiskProfileID) \nwith composition managed by Jenius Admin
ms --> app: return risk profile detail
deactivate ms
deactivate app
@enduml