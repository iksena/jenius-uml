@startuml get portfolios
participant "Apps" as app
participant "ms-gql" as gql
participant "ms-investment-transaction" as ms
collections "DB\nInvestment Transaction" as db
participant "ms-accounts" as msAccount
participant "ms-investment" as msInvestment
participant "ms-investment-auth" as auth
participant "Additiv\nDFS" as dfs

activate app
app -> gql: mutation forecasts
note right
forecastInvestmentTransaction(input: ForecastInvestmentTransactionInput!) {
  checksum: String
  productCode: String
  units: Float
  amount: Float
  fee: Float
  tax: Float
  currency: String
}
input ForecastInvestmentTransactionInput {
  currency: String!
  productCode: String!
  subAccount: String
  type: String!
  amount: Int
  units: Float
  goalCode: String
  isRedeemAll: Boolean
}
end note
activate gql

gql -> ms: POST /forecasts
activate ms
ms -> msAccount: GET /accounts
activate msAccount
msAccount --> ms: return account list and filter by currency
deactivate msAccount
ms -> msInvestment: GET /portfolios/{goalCode}
activate msInvestment
msInvestment --> ms: return portfolioId
ms -> msInvestment: GET /products/{productCode}
msInvestment --> ms: return productCode ISIN
deactivate msInvestment
ms -> auth: GET /auth
activate auth
auth --> ms: return contactId and accessToken
deactivate auth
ms -> dfs: POST /v1.0/contacts/{contactId}/portfolios/{portfolioId}/transaction/validate
note right
{
  "CashAccountNumber": {accountNumber}
  "Transactions": [{
    "ProductCode": {productCodeIsin}
    "TransactionCategory": Subscription/Redemption,
    "IsRedeemAll": true/false,
    "InvestmentAmount": Number,
    "Units": Number
  }]
}
end note
activate dfs
dfs --> ms: return forecast response
note left
{
  "Status": "Success"
  "Result": {
    "CIF": "1234A0",
    "TotalAmount": Number,
    "PortfolioId": Number,
    "Transactions": [{
      "FeeValue": 0.5,
      "FeeAmount": Number,
      "InvestmentAmount": Number,
      "TaxAmount": Number,
      "ProductCode": {productCodeIsin},
      "ProductCurrency": IDR,
      "TransactionCategory": Subscription/Redemption
    }]
  }
}
end note
deactivate dfs
ms -> ms: map forecast and generate RefNo
ms -> db: insert forecast
ms --> gql: return checksum and forecast data

deactivate ms
gql --> app: return forecast
deactivate gql
deactivate app
@enduml